// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id            Int       @id @default(autoincrement())
  employee_id   Int       @unique  
  password      String    @db.VarChar(255)
  employee      Employee  @relation(fields: [employee_id], references: [id])
  reset_code    String?   @db.VarChar(8)
  rec_orders    Order[]
  rec_transactions Transaction[]
  rec_purchases Purchase[]
  rec_payables  Payables[]
}

model Employee {
  id            Int       @id @default(autoincrement())
  first_name    String    @db.VarChar(150)
  last_name     String    @db.VarChar(150)
  contact_number String    @db.VarChar(15)
  email         String    @db.VarChar(200) @unique
  address       String    @db.VarChar(200)
  city          String    @db.VarChar(150)
  province      String    @db.VarChar(150)
  zip_code      Int?       
  position      String    @db.VarChar(150)
  is_active     Boolean   @default(true)
  profile_image String?   @db.VarChar(100)
  user_account  Account?
  sold_orders   Order[]
  transactions  Transaction[]
}

model Customer {
  id            Int       @id @default(autoincrement())
  company_name  String?   @db.VarChar(200)
  first_name    String    @db.VarChar(150)
  last_name     String    @db.VarChar(150)
  contact_number String?   @db.VarChar(15)
  email         String?   @db.VarChar(200)
  website       String?   @db.VarChar(200)
  address       String?   @db.VarChar(200)
  city          String    @db.VarChar(150)
  province      String    @db.VarChar(150)
  is_active     Boolean   @default(true)
  bought_orders Order[]
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(200)
  details       ProductDetails[]
  bar_code      String?   @db.VarChar(200)
  stocks        Int
  price         Decimal   @db.Decimal(12, 5)
  init_price    Decimal?   @db.Decimal(12, 5)
  category_id   Int   
  image_name    String?   @db.VarChar(200)
  is_active     Boolean   @default(true)
  category      Category  @relation(fields: [category_id], references: [id])
  orders        OrderWithProduct[]
  purchased_stock PurcahseWithProduct[]
}

model Category {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(200)
  description   String    @db.VarChar(200)
  products      Product[]
}

model ProductDetails {
  id            Int       @id @default(autoincrement())
  type          String    @db.VarChar(150)
  unit          String?   @db.VarChar(50)
  num_value     Decimal?  @db.Decimal(12, 5)
  text_value    String?   @db.VarChar(200)
  product_id    Int
  product       Product @relation(fields: [product_id], references: [id])
}

model Order {
  id            Int       @id @default(autoincrement())
  employee_id   Int
  employee      Employee  @relation(fields: [employee_id], references: [id])
  account_id    Int
  user_account  Account   @relation(fields: [account_id], references: [id])
  customer_id   Int
  customer      Customer  @relation(fields: [customer_id], references: [id])
  payment_type  String    @db.VarChar(100)
  vat           Decimal?  @db.Decimal(5, 3)
  discount      Decimal?  @db.Decimal(12, 5)
  total_price   Decimal   @db.Decimal(12, 5)
  amount_due    Decimal   @db.Decimal(12, 5)
  order_date    DateTime  
  due_date      DateTime
  is_active     Boolean   @default(true)
  inv_fileName  String?   @db.VarChar(100)
  receipt_file  String?   @db.VarChar(100)
  delivered     DateTime? 
  sold          Sales?
  products      OrderWithProduct[]
  transactions  Transaction[]
}

model OrderWithProduct {
  product_id    Int
  product       Product   @relation(fields: [product_id], references: [id], onDelete: Cascade)
  order_id      Int
  order         Order     @relation(fields: [order_id], references: [id], onDelete: Cascade)
  quantity      Int
  total_price   Decimal   @db.Decimal(12, 5)

  @@id([product_id, order_id])
}

model Sales {
  id            Int       @id @default(autoincrement())
  order_id      Int
  order         Order     @relation(fields: [order_id], references: [id])
  date_paid     DateTime  @default(now())
}

model Transaction {
  id            Int       @id @default(autoincrement())
  employee_id   Int
  employee      Employee  @relation(fields: [employee_id], references: [id])
  account_id    Int
  user_account  Account   @relation(fields: [account_id], references: [id])
  order_id      Int
  order         Order     @relation(fields: [order_id], references: [id])
  amount_paid   Decimal   @db.Decimal(12, 5)
  payment_date  DateTime
}

model Supplier {
  id            Int       @id @default(autoincrement())
  company_name  String?   @db.VarChar(200)
  first_name    String    @db.VarChar(150)
  last_name     String    @db.VarChar(150)
  contact_number String?   @db.VarChar(15)
  email         String?   @db.VarChar(200)
  website       String?   @db.VarChar(200)
  address       String?   @db.VarChar(200)
  city          String?   @db.VarChar(150)
  province      String?   @db.VarChar(150)
  is_active     Boolean   @default(true)
  supplied_orders Purchase[]
}

model Purchase {
  id            Int       @id @default(autoincrement())
  invoice_id    String?   @db.VarChar(100)
  supplier_id   Int
  supplier      Supplier  @relation(fields: [supplier_id], references: [id])
  account_id    Int
  user_account  Account   @relation(fields: [account_id], references: [id])
  total_amount  Decimal   @db.Decimal(12, 5)
  discount      Decimal?   @db.Decimal(12, 5)
  add_charge    Decimal?   @db.Decimal(12, 5)
  payment_type  String    @db.VarChar(100)
  is_paid       Boolean   @default(false)
  delivered     DateTime?
  purchase_date DateTime
  due_date      DateTime
  inv_fileName  String?   @db.VarChar(100)
  is_active     Boolean   @default(true)
  purchased     PurcahseWithProduct[]
  payables      Payables[]
}

model PurcahseWithProduct {
  product_id    Int
  product       Product   @relation(fields: [product_id], references: [id])
  purchase_id   Int
  purchase      Purchase  @relation(fields: [purchase_id], references: [id])
  quantity      Int
  total_price   Decimal @db.Decimal(12, 5)

  @@id([product_id, purchase_id])
}

model Payables {
  id            Int       @id @default(autoincrement())
  purchase_id   Int
  purchase      Purchase  @relation(fields: [purchase_id], references: [id])
  account_id    Int
  user_account  Account   @relation(fields: [account_id], references: [id])
  amount_paid   Decimal   @db.Decimal(12, 5)
  receipt_file  String?   @db.VarChar(100)
  payment_date  DateTime
}

model Locations {
  id            Int       @id @default(autoincrement())
  province      String    @db.VarChar(100)
  city          String    @db.VarChar(100) @unique
}
